{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "4cd0201b",
   "metadata": {},
   "outputs": [],
   "source": [
    "import os\n",
    "import numpy as np\n",
    "import pandas as pd\n",
    "\n",
    "from PIL import Image\n",
    "from keras.preprocessing.image import load_img, img_to_array\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "f80b53f6",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "../data/train_images/3150477025.jpg\n",
      "         image_id  label                             img_path  \\\n",
      "0  1000015157.jpg      0  ../data/train_images/3150477025.jpg   \n",
      "1  1000201771.jpg      3  ../data/train_images/3150477025.jpg   \n",
      "2   100042118.jpg      1  ../data/train_images/3150477025.jpg   \n",
      "3  1000723321.jpg      1  ../data/train_images/3150477025.jpg   \n",
      "4  1000812911.jpg      3  ../data/train_images/3150477025.jpg   \n",
      "\n",
      "                                             img_rgb  \n",
      "0  [[[46, 65, 3], [58, 78, 7], [93, 118, 20], [13...  \n",
      "1  [[[46, 65, 3], [58, 78, 7], [93, 118, 20], [13...  \n",
      "2  [[[46, 65, 3], [58, 78, 7], [93, 118, 20], [13...  \n",
      "3  [[[46, 65, 3], [58, 78, 7], [93, 118, 20], [13...  \n",
      "4  [[[46, 65, 3], [58, 78, 7], [93, 118, 20], [13...  \n"
     ]
    }
   ],
   "source": [
    "# Load the csv\n",
    "\n",
    "df = pd.read_csv(\"../data/train.csv\")\n",
    "\n",
    "# Create a list with all the images names\n",
    "img_path_list = os.listdir(\"../data/train_images\")\n",
    "\n",
    "# Include a column in the dataframe with the path to the image\n",
    "imgs_path = (\"../data/train_images/\")\n",
    "for img in img_path_list:\n",
    "    df[\"img_path\"] = imgs_path + img\n",
    "    \n",
    "\n",
    "print(df[\"img_path\"][0])\n",
    "    \n",
    "def load_image(img_path):\n",
    "    img = Image.open(img_path).convert(\"RGB\").resize((224, 224))\n",
    "    img_array = np.array(img)  # Convert PIL Image to numpy array\n",
    "    return img_array\n",
    "\n",
    "# Apply the function to each row in the DataFrame to load the images\n",
    "df[\"img_rgb\"] = df[\"img_path\"].apply(lambda x: load_image(x))\n",
    "    \n",
    "print(df.head())"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "id": "372b4722",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "<class 'numpy.ndarray'> (21397,)\n",
      "<class 'numpy.ndarray'> (21397,)\n"
     ]
    }
   ],
   "source": [
    "all_x = np.array(df[\"img_rgb\"])\n",
    "\n",
    "print(type(all_x), all_x.shape)\n",
    "\n",
    "all_y = np.array(df[\"label\"])\n",
    "\n",
    "print(type(all_y), all_y.shape)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "id": "d992314c",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(224, 224, 3)"
      ]
     },
     "execution_count": 7,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "all_x[0].shape"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "fca4b436",
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "myenv",
   "language": "python",
   "name": "myenv"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.11.5"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
